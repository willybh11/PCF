#!/bin/bash
# Test bash script to do everything we do

drives_and_sizes="$( lsblk -b -n -o name,size,mountpoint )"

# strip output of newlines
drives_and_sizes=$(echo $drives_and_sizes|tr -d '\n')

# split output into array by ' '
IFS=' ' read -r -a array <<< "$drives_and_sizes"

# find unmounted parition
i=0
for target_drive in "${array[@]}"
do
    if [[ "$target_drive" == *"sd"* && "${array[ "$( echo "$i + 4" | bc )"]}" != *"/"* ]]
    then
    	break
    fi
    i=$( echo "$i + 1" | bc)
done

# get size of drive to partition
target_size="${array["$( echo "$i + 1" | bc )"]}"
# target_size="$( echo "$target_size - 5000" | bc )"
target_size="$( echo "$target_size / 1024^3 - 5" | bc )"

echo "$target_drive"1 should be resized to $target_size GB

# apply image, create sdx1
echo imaging /install/pcf.img to /dev/"$target_drive".
time cat /install/pcf.img > /dev/"$target_drive"

# grow partition
sudo parted /dev/"$target_drive" resizepart 1 "$target_size"G

# resize filesystem to match partition
sudo e2fsck -f /dev/"$target_drive"1
sudo resize2fs -p /dev/"$target_drive"1
#reboot
